<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<!-- regular spring configuration file defining the beans for this bundle. 
		We've kept the osgi definitions in a separate configuration file so that 
		this file can easily be used for integration testing outside of an OSGi environment -->

	 <!-- Activates scanning of @Autowired -->
    <context:annotation-config/>
   <bean name="ShapeBlueCloudConnectorFactory" class="com.shapeblue.cpbm.reporting.cloud.connector.ShapeBlueCloudConnectorFactoryImpl"/>
   <bean name="cloudConnector" class="com.shapeblue.cpbm.reporting.cloud.service.ShapeBlueCloudConnectorImpl" scope="prototype"/>
   <bean name="metadataRegistry" class="com.shapeblue.cpbm.reporting.cloud.connector.ShapeBlueMetadataRegistry" scope="prototype"/>
   <bean name="accountLifecycleHandler" class="com.shapeblue.cpbm.reporting.cloud.lifecycle.handlers.ShapeBlueAccountLifeCycleHandler" scope="prototype"/>
   <bean name="userLifecycleHandler" class="com.shapeblue.cpbm.reporting.cloud.lifecycle.handlers.ShapeBlueUserLifeCycleHandler" scope="prototype"/>
   <bean name="subscriptionLifecycleHandler" class="com.shapeblue.cpbm.reporting.cloud.lifecycle.handlers.ShapeBlueSubscriptionLifecycleHandler" scope="prototype"/>
   <bean name="usageCollector" class="com.shapeblue.cpbm.reporting.cloud.collectors.ShapeBlueUsageCollector" scope="prototype"/>
   <bean name="eventCollector" class="com.shapeblue.cpbm.reporting.cloud.collectors.ShapeBlueEventCollector" scope="prototype"/>
   <bean name="viewResolver" class="com.shapeblue.cpbm.reporting.cloud.views.ShapeBlueViewResolver" scope="prototype"></bean>
</beans>